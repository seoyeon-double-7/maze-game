#include <SFML/Graphics.hpp>
#include <iostream>

using namespace std;
using namespace sf;

int main()
{
	const int w=25, h=100;
	int posX = 100, posY = 100;

	// 맵 배열
	char map1[w][h] = {
	{"11111111111111111111111111111111111111111111111111111111"},
	{"10000000100000000000000000000000000000000000000000000001"},
	{"10000000100000000000000000000000000000000000000000000001"}, // 0 : 빈 공간 
	{"10001000100000000000000000000000000000000000000000000001"}, // 1 : 벽 
	{"10001000100000000000000000000000000000000000000000000001"}, // k : 열쇠 
	{"10001000100000000000000000000000000000000000000000000001"}, // l : 잠긴 문 
	{"10001000111111000000000000000000000000000000000000000001"}, // q : 탈출구  
	{"10001000000001000000000000000000000000000000000000000001"},
	{"10001000100001000000000000000000000000000000000000000001"},
	{"10001000100k01000000000000000000000000000000000011111111"},
	{"10001000100001000000000000000000000000000000000010000001"},
	{"10s010001111111111111111111111111111111111111111100q0001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"10001000l00000000000000k0000000000000000000000l000000001"},
	{"11111111111111111111111111111111111111111111111111111111"}
	};


	int x = 0, y = 0;

	Clock clock;	//경과 시간을 측정할 수 있는 Clock 객체 선언
	Clock ai_timer;
	float interval = 0, delay1 = 4.0;
	int count = 0;

	const Time ai_time = seconds(0.5f);

	cout << "게임 시작" << endl;

	// 텍스쳐, 스프라이트
	//Texture Tbackground, Tstart, Trule, Trank;
	//Sprite background, start, rule, rankBtn;

	//Texture rankScreen, ruleScreen, mapScreen;
	//Sprite rank_screen, rule_screen, map_screen;

	// 미로 사각형
	RectangleShape rect_maze;
	rect_maze.setSize(Vector2f(20, 20));
	rect_maze.setFillColor(Color(96, 58, 18));
	rect_maze.setPosition(100, 100);


	// 화면 크기, 캡션 이름 설정
	RenderWindow app(VideoMode(1000, 600), "MazeGame");
	app.setFramerateLimit(60);	//프레임 비율 설정

	// 초당 60 프레임 설정
	app.setFramerateLimit(60);

	// SFML 메인 루프 - 윈도우 닫힐때까지 반복

	while (app.isOpen())
	{
		// 초단위로 경과시간을 구함
		/*float time = clock.getElapsedTime().asSeconds();
		clock.restart();

		interval += time;*/

		Event event;
		// 이벤트 처리
		while (app.pollEvent(event)) {


			// 프로그램 종료 이벤트 처리
			if (event.type == Event::EventType::Closed)
			{
				app.close();
				cout << "게임 종료" << endl;
			}

		}


		app.clear(Color(193, 163, 107, 255));

		// 배열 그려주기
		
		for (int i = 0; i < w; i++) {	//y
			for (int j = 0; j < h; j++) {	// x
				char temp = map1[i][j];
				if (temp == '1') {	//벽
					rect_maze.setPosition(posX + (j * 15), posY + (i * 15));
					app.draw(rect_maze);
				}
			}
			
		}
		


		// 프레임 스크린에 출력
		app.display();

	}
	return 0;
}